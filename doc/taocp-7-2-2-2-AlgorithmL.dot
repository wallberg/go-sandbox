digraph G {
    L1 [label="L1. Initialize"]
    L2 [label="L2. New node"]
    L3 [label="L3. Choose l"]
    L4 [label="L4. Try l"]
    L5 [label="L5. Accept NTs"]
    L6 [label="L6. Choose NT L"]
    L7 [label="L7. Promote L to RT"]
    L8 [label="L8. Consider u or v"]
    L9 [label="L9. Exploit u or v"]
    L10 [label="L10. Accept RT"]
    L11 [label="L11. Unfix NT"]
    L12 [label="L12. Unfix RT"]
    L13 [label="L13. Downdate BIMPs"]
    L14 [label="L14. Try again?"]
    L15 [label="L15. Backtrack"]

    L1 -> L2
    L2 -> Terminate [label="U=0; satisfied"]
    L2 -> L15 [label="U=0; conflict"]
    L2 -> L3 [label="U=0"]
    L2 -> L5 [label="U>0"]
    L3 -> L2 [label="l=0 (fixed)"]
    L3 -> L4 -> L5 -> L6
    L5 -> L11 [label="b.p. conflict"]
    L6 -> L10 [label="R is all RT"]
    L6 -> L7 [label="Choose NT"]
    L7 -> L6
    L7 -> L8
    L8 -> L7
    L8 -> L9
    L9 -> L7
    L9 -> L11 [label="b.p. conflict"]
    L10 -> L2 [label="BRANCH[d]>=0"]
    L10 -> L3 [label="else if d>0"]
    L10 -> L2 [label="else if d=0"]
    L11 -> L12 -> L13 -> L14
    L14 -> L4 [label="BRANCH[d]==0 <- 1"]
    L14 -> L15 [label="else"]
    L15 -> Terminate [label="d=0; unsatisfiable"]
    L15 -> L12
}